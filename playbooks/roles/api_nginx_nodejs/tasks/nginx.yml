---
# file: api_nginx_nodejs/tasks/nginx.yml

# TODO: note that this misses the test case of nginx installed by source.
- name: check nginx is installed
  apt: 
    pkg=nginx
    state=present

- name: make the serving directory exists
  file:
    state=directory
    path={{api_nginx_root}}
    owner={{nginx_user}}
    group={{nginx_group}}
    mode=0775

- include_vars: api_wildcard_key_net.yml

- name: Put our wildcard key (*.api.augmate.net) in place for the API server
  copy:
    content="{{api_wildcard_key}}"
    dest="{{api_nginx_root}}/essential/signedcerts/{{api_nginx_ssl_key}}"
    owner={{user}}
    group={{user}}
    mode=0440

  # Don't start Nginx at any point in this task.  
  # Leave that up to the Playbook  
- name: replace nginx.conf with our templated version
  template:
    src=nginx.conf.j2
    dest=/etc/nginx/nginx.conf
    validate="nginx -t -c %s"
    owner="{{ nginx_user }}"
    group="{{ nginx_group }}"
    mode=0444

#Don't validate on the api nginx conf -- if the upstream server fails, we get a misleading error
#about an upstream directive.
- name: write api_nginx_nodejs.conf to /etc/nginx/conf.d/sites-available
  template:
    src=api_nginx_nodejs.j2
    dest=/etc/nginx/sites-available/api-server
    owner="{{ nginx_user }}"
    group="{{ nginx_group }}"
    mode=0444

- name: write api_nginx_nodejs_ssl.conf to /etc/nginx/conf.d/sites-available
  template:
    src=api_nginx_nodejs_ssl.j2
    dest=/etc/nginx/sites-available/api-server-ssl
    owner="{{ nginx_user }}"
    group="{{ nginx_group }}"
    mode=0444

- name: symlink api-server to nginx's sites-enabled dir
  file: 
    path=/etc/nginx/sites-enabled/api-server
    src=/etc/nginx/sites-available/api-server
    state=link